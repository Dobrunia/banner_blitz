name: Build APK and Release

on:
  push:
    branches: [main, master]
    paths:
      - "package.json"
  pull_request:
    branches: [main, master]
    paths:
      - "package.json"
  workflow_dispatch:

permissions:
  contents: write # Для создания release
  packages: write # Опционально, для gh CLI

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Достаточно с кэшем

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Нужно для сравнения с предыдущим коммитом

      - name: Check if version changed
        id: version-check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Manual trigger - building APK"
            exit 0
          fi

          # Получаем текущую версию
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Получаем предыдущую версию
          PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync(0, 'utf8')).version" 2>/dev/null || echo "0.0.0")
          echo "Previous version: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION - building APK"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged ($CURRENT_VERSION) - skipping APK build"
          fi

      - name: Exit if no version change
        if: steps.version-check.outputs.changed == 'false'
        run: |
          echo "No version change detected. Exiting workflow."
          exit 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install npm dependencies
        run: npm ci

      - name: Install Capacitor
        run: |
          npm install --no-audit --no-fund @capacitor/cli@latest @capacitor/android@latest

      - name: Build web app
        run: npm run build

      - name: Setup Java (Temurin 21)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Clean and add Android
        run: |
          rm -rf android  # Clean remove if exists
          npx cap add android

      - name: Sync and copy assets
        run: |
          npx cap sync android
          npx cap copy android

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Prepare APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          APK_PATH="android/app/build/outputs/apk/debug/app-debug.apk"
          if [ -f "$APK_PATH" ]; then
            mv "$APK_PATH" "flag-quiz-debug.apk"
            echo "APK prepared: flag-quiz-debug.apk"
          else
            echo "APK not found — skipping release"
            exit 1
          fi

      - name: Create Release and Upload APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$(date +%Y%m%d-%H%M%S)"
          echo "Creating release with tag: $TAG"
          gh release create "$TAG" --title "Release $TAG" --notes "Auto-built debug APK for Flag Quiz" --draft=false
          gh release upload "$TAG" flag-quiz-debug.apk --clobber
